server.js page 

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { sequelize, Customer, Transfer } = require('./models');

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Route for the root path (`/`)
app.get('/', (req, res) => {
  res.send('Hello World! Money transfer application is running.');
});

// Route to get all customers
app.get('/customers', async (req, res) => {
  try {
    const customers = await Customer.findAll();
    res.json(customers);
  } catch (error) {
    console.error(error);
    res.status(500).json({ success: false, message: 'Internal server error' });
  }
});

// Route to get a single customer by ID
app.get('/customers/:id', async (req, res) => {
  try {
    const customer = await Customer.findByPk(req.params.id);
    res.json(customer);
  } catch (error) {
    console.error(error);
    res.status(500).json({ success: false, message: 'Internal server error' });
  }
});

// Route to transfer money between customers
app.post('/transfer', async (req, res) => {
  try {
    const { sender_id, receiver_id, amount } = req.body;
    const sender = await Customer.findByPk(sender_id);
    const receiver = await Customer.findByPk(receiver_id);

    if (sender && receiver && sender.balance >= amount) {
      sender.balance -= amount;
      receiver.balance += amount;
      await sender.save();
      await receiver.save();
      await Transfer.create({ sender_id, receiver_id, amount });
      res.json({ success: true });
    } else {
      res.json({ success: false, message: 'Transfer failed' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ success: false, message: 'Internal server error' });
  }
});

// Sync database and start server
sequelize.sync().then(() => {
  app.listen(3000, () => {
    console.log('Server is running on port 3000');
  });
});



app.js page

// src/App.js
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import HomePage from './HomePage';
import CustomerPage from './CustomerPage';
import TransferPage from './TransferPage';

function App() {
  return (
    <Router>
      <Switch>
        <Route path="/" exact component={HomePage} />
        <Route path="/customer/:id" component={CustomerPage} />
        <Route path="/transfer" component={TransferPage} />
      </Switch>
    </Router>
  );
}

export default App;


HomePage.js page 

import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

function HomePage() {
  const [customers, setCustomers] = useState([]);

  useEffect(() => {
    axios.get('/customers')
      .then(response => setCustomers(response.data))
      .catch(error => console.error(error));
  }, []);

  return (
    <div>
      <h1>All Customers</h1>
      <ul>
        {customers.map(customer => (
          <li key={customer.id}>
            <Link to={`/customer/${customer.id}`}>{customer.name}</Link>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default HomePage;


// src/HomePage.js
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

function HomePage() {
  const [customers, setCustomers] = useState([]);

  useEffect(() => {
    axios.get('/customers')
      .then(response => setCustomers(response.data))
      .catch(error => console.error(error));
  }, []);

  return (
    <div>
      <h1>All Customers</h1>
      <ul>
        {customers.map(customer => (
          <li key={customer.id}>
            <Link to={`/customer/${customer.id}`}>{customer.name}</Link>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default HomePage;


TransferPage.js  page


import React, { useState, useEffect } from 'react';
import axios from 'axios';

function TransferPage() {
  const [customers, setCustomers] = useState([]);
  const [senderId, setSenderId] = useState('');
  const [receiverId, setReceiverId] = useState('');
  const [amount, setAmount] = useState('');

  useEffect(() => {
    axios.get('/customers')
      .then(response => setCustomers(response.data))
      .catch(error => console.error(error));
  }, []);

  const handleTransfer = () => {
    axios.post('/transfer', { sender_id: senderId, receiver_id: receiverId, amount })
      .then(response => {
        if (response.data.success) {
          alert('Transfer successful');
        } else {
          alert('Transfer failed: ' + response.data.message);
        }
      })
      .catch(error => console.error(error));
  };

  return (
    <div>
      <h1>Transfer Money</h1>
      <label>Sender: </label>
      <select value={senderId} onChange={(e) => setSenderId(e.target.value)}>
        {customers.map(customer => (
          <option key={customer.id} value={customer.id}>{customer.name}</option>
        ))}
      </select>
      <label>Receiver: </label>
      <select value={receiverId} onChange={(e) => setReceiverId(e.target.value)}>
        {customers.map(customer => (
          <option key={customer.id} value={customer.id}>{customer.name}</option>
        ))}
      </select>
      <label>Amount: </label>
      <input type="number" value={amount} onChange={(e) => setAmount(e.target.value)} />
      <button onClick={handleTransfer}>Transfer</button>
    </div>
  );
}

export default TransferPage;


// models/index.js
const { Sequelize, DataTypes } = require('sequelize');
const sequelize = new Sequelize('mysql://root:Saksham04.,@localhost:3306/money_transfer_app');

const Customer = sequelize.define('Customer', {
  name: { type: DataTypes.STRING, allowNull: false },
  email: { type: DataTypes.STRING, allowNull: false },
  balance: { type: DataTypes.DECIMAL(10, 2), allowNull: false }
});

const Transfer = sequelize.define('Transfer', {
  sender_id: { type: DataTypes.INTEGER, allowNull: false },
  receiver_id: { type: DataTypes.INTEGER, allowNull: false },
  amount: { type: DataTypes.DECIMAL(10, 2), allowNull: false }
});

module.exports = { sequelize, Customer, Transfer };


this is the code that is written with their page name and code 
coreect it and provide me the structure how to create files folders
